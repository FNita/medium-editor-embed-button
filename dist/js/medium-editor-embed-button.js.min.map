{"version":3,"sources":["medium-editor-embed-button.js"],"names":["window","document","MediumEditor","Error","embedButton","name","action","contentDefault","contentFA","aria","defaults","msgSelectOnlyUrl","msgSelectOnlyEmbadableUrl","oembedProxy","cssEmbedOverlay","cssEmbeds","cssSelected","instagramEmbedScript","twitterEmbedScripts","facebookEmbedScripts","ifrmelyEmbedScript","vimeoEmbedScripts","init","extensions","button","prototype","call","this","opts","util","extend","embedOpts","self","doc","$embeds","querySelectorAll","i","length","$elem","setAttribute","querySelector","appendOverlay","base","_originalSerializerPreEmbeds","serialize","embedSerialize","attachEvents","on","unselectEmbed","bind","$allEmbeds","selectEmbed","removeEmbed","elements","deleteEmbedOnBackspaceAndDel","ajaxGet","url","callback","failCallback","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","DONE","status","apply","JSON","parse","responseText","open","setRequestHeader","location","href","send","handleClick","e","preventDefault","stopPropagation","range","selection","getSelectionRange","startContainer","nodeName","toLowerCase","endContainer","getClosestTag","getSelectedParentElement","execAction","alert","selectedText","getSelection","indexOf","data","insertEmbed","checkContentChanged","txt","toString","createRange","text","$overlay","createElement","className","appendChild","id","guid","$wrapper","innerHTML","html","pasteHTML","getHtml","cleanAttrs","cleanTags","getElementById","loadIfIframely","injectScript","instgrm","Embeds","process","setTimeout","FB","XFBML","twttr","widgets","load","$target","target","$parent","parentElement","classList","contains","$alreadySelected","forEach","elem","remove","add","$embed","isKey","keyCode","BACKSPACE","DELETE","p","insertBefore","removeChild","$current","getSelectionStart","options","ownerDocument","caretOffsets","getCaretOffsets","left","$isEmbed","previousSibling","newP","embedExtension","getExtensionByName","key","hasOwnProperty","obj","$data","value","removeAttribute","$wrap","cloneNode","script","type","async","onLoad","src","protocol","getElementsByTagName","EmbedButtonExtension"],"mappings":"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","file":"medium-editor-embed-button.js","sourcesContent":["/**\n * Created by orhanveli on 15/08/16.\n */\n\n(function (window, document, MediumEditor) {\n    \"use strict\";\n\n    if (typeof MediumEditor !== \"function\") {\n        throw new Error(\"Medium Editor is not loaded on the page.\");\n    }\n\n    var embedButton = {\n        \"name\": \"embedButton\",\n        \"action\": \"embedAction\",\n        \"contentDefault\": \"E\",\n        \"contentFA\": '<i class=\"fa fa-youtube-play\"></i>',\n        \"aria\": \"Embed media\",\n\n        \"defaults\": {\n            \"msgSelectOnlyUrl\": \"Seçtiğiniz metin geçerli bir URL değil!\",\n            \"msgSelectOnlyEmbadableUrl\": \"Seçtiğiniz URL desteklenmiyor!\",\n            \"oembedProxy\": \"http://iframe.ly/api/oembed?api_key=APIKEY_HERE&url=\",\n            \"cssEmbedOverlay\": \"medium-editor-embeds-overlay\",\n            \"cssEmbeds\": \"medium-editor-embeds\",\n            \"cssSelected\": \"medium-editor-embeds-selected\",\n            \"instagramEmbedScript\": \"//platform.instagram.com/en_US/embeds.js\",\n            \"twitterEmbedScripts\": \"//platform.twitter.com/widgets.js\",\n            \"facebookEmbedScripts\": \"//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.7\",\n            \"ifrmelyEmbedScript\": \"//cdn.iframe.ly/embed.js\",\n            \"vimeoEmbedScripts\": \"\"\n        },\n\n        \"init\": function() {\n            MediumEditor.extensions.button.prototype.init.call(this);\n            this.opts = MediumEditor.util.extend({}, this.defaults, this.embedOpts);\n\n            var self = this,\n                doc = self.document,\n                $embeds = doc.querySelectorAll(\".\" + self.opts.cssEmbeds);\n\n\n            for (var i = 0; i < $embeds.length; i++) {\n                var $elem = $embeds[i];\n                $elem.setAttribute(\"contenteditable\", false);\n                if ($elem.querySelector(\".\" + self.opts.cssEmbedOverlay) === null) {\n                    self.appendOverlay($elem);\n                }\n            }\n\n            this.base._originalSerializerPreEmbeds = self.base.serialize;\n            this.base.serialize = self.embedSerialize;\n\n            this.attachEvents();\n        },\n\n        \"attachEvents\": function() {\n            this.on(this.document, \"click\", this.unselectEmbed.bind(this));\n            var $allEmbeds = this.document.querySelectorAll(\".\" + this.opts.cssEmbedOverlay);\n            this.on($allEmbeds,\n                \"click\",\n                this.selectEmbed.bind(this));\n\n            if($allEmbeds !== null) {\n            }\n            this.on(this.document, \"keydown\", this.removeEmbed.bind(this));\n            this.on(this.base.elements, \"keydown\", this.deleteEmbedOnBackspaceAndDel.bind(this));\n        },\n\n        \"ajaxGet\": function(url, callback, failCallback) {\n            var xmlhttp = new XMLHttpRequest();\n            xmlhttp.onreadystatechange = function() {\n                if (xmlhttp.readyState === XMLHttpRequest.DONE) {\n                    if (xmlhttp.status === 200) {\n                        callback.apply(xmlhttp, [JSON.parse(xmlhttp.responseText)]);\n                    } else if (xmlhttp.status === 400) {\n                        //console.log('There was an error 400');\n                    } else {\n                        //console.log('something else other than 200 was returned');\n                        if (typeof failCallback !== \"undefined\") {\n                            failCallback.apply(xmlhttp);\n                        }\n                    }\n                }\n            };\n\n            xmlhttp.open(\"GET\", url, true);\n            xmlhttp.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xmlhttp.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n            xmlhttp.setRequestHeader(\"Referrer\", document.location.href);\n            xmlhttp.send();\n            return xmlhttp;\n        },\n\n        \"handleClick\": function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var self = this;\n\n            var range = MediumEditor.selection.getSelectionRange(self.document);\n\n            if (range.startContainer.nodeName.toLowerCase() === \"a\" ||\n                range.endContainer.nodeName.toLowerCase() === \"a\" ||\n                MediumEditor.util.getClosestTag(MediumEditor.selection.getSelectedParentElement(range), \"a\")) {\n                return self.execAction(\"unlink\");\n            }\n\n            if (range.startContainer.nodeName.toLowerCase() !== \"#text\" &&\n                range.endContainer.nodeName.toLowerCase() !== \"#text\") {\n                alert(self.opts.msgSelectOnlyUrl);\n                return false;\n            }\n\n            var selectedText = this.getSelection();\n\n            if (selectedText.indexOf(\"http\") < 0) {\n                alert(self.opts.msgSelectOnlyUrl);\n                return false;\n            }\n\n            self.ajaxGet(self.opts.oembedProxy + selectedText,\n                function(data) {\n                    self.insertEmbed(data);\n                });\n\n            self.base.checkContentChanged();\n        },\n\n        \"getSelection\": function() {\n            var txt = \"\";\n            if (window.getSelection) {\n                txt = window.getSelection().toString();\n            } else if (document.getSelection) {\n                txt = document.getSelection().toString();\n            } else if (document.selection) {\n                txt = document.selection.createRange().text;\n            }\n            return txt;\n        },\n\n        \"appendOverlay\": function($elem) {\n            var $overlay = this.document.createElement(\"div\");\n            $overlay.className = this.opts.cssEmbedOverlay;\n            $elem.appendChild($overlay);\n        },\n\n        \"insertEmbed\": function(data) {\n            var self = this,\n                id = MediumEditor.util.guid(),\n                $wrapper = self.document.createElement(\"div\");\n\n            $wrapper.setAttribute(\"id\", id);\n            $wrapper.setAttribute(\"contenteditable\", false);\n            $wrapper.className = self.opts.cssEmbeds;\n            $wrapper.innerHTML = data.html;\n            self.appendOverlay($wrapper);\n            self.base.pasteHTML(self.getHtml($wrapper),\n                {\n                    cleanAttrs: [],\n                    cleanTags: []\n                });\n            var $overlay = self.document.getElementById(id).querySelector(\".\" + self.opts.cssEmbedOverlay);\n            this.on($overlay, \"click\", this.selectEmbed.bind(this));\n            self.loadIfIframely();\n\n            /**\n             * hede comment\n             */\n            if (data.url.indexOf(\"instagr\") > -1) {\n                if (typeof (window.instgrm) === \"undefined\") {\n                    self.injectScript(self.opts.instagramEmbedScript);\n                    return;\n                }\n                window.instgrm.Embeds.process();\n            } else if (data.url.indexOf(\"facebook\") > -1) {\n                if (typeof (window.FB) === \"undefined\") {\n                    self.injectScript(self.opts.facebookEmbedScripts);\n                }\n                setTimeout(function() {\n                    window.FB.XFBML.parse();\n                }, 1000);\n            } else if (data.url.indexOf(\"twitter\") > -1) {\n                if (typeof (window.twttr) === \"undefined\") {\n                    self.injectScript(self.opts.twitterEmbedScripts);\n                    return;\n                }\n                window.twttr.widgets.load();\n            }\n\n        },\n\n        \"loadIfIframely\": function() {\n            if (typeof this.opts.oembedProxy !== \"undefined\" && this.opts.oembedProxy.indexOf(\"iframely\")) {\n                this.injectScript(this.opts.ifrmelyEmbedScript);\n            }\n        },\n\n        \"selectEmbed\": function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var self = this,\n                $target = e.target,\n                $parent = $target.parentElement;\n\n            if ($parent.classList.contains(self.opts.cssSelected)) {\n                return;\n            }\n\n            var $alreadySelected = self.document.querySelectorAll(\".\" + self.opts.cssEmbeds);\n            if (typeof $alreadySelected !== \"undefined\" && $alreadySelected !== null) {\n                $alreadySelected.forEach(function(elem) {\n                    elem.classList.remove(self.opts.cssSelected);\n                });\n            }\n\n            $parent.classList.add(self.opts.cssSelected);\n        },\n\n        \"unselectEmbed\": function(e) {\n            var self = this,\n                $target = e.target,\n                $embeds = self.document.querySelectorAll(\".\" + self.opts.cssEmbeds);\n\n            if ($embeds.length === 0) {\n                return false;\n            }\n\n            if ($target.classList.contains(self.opts.cssEmbedOverlay)) {\n                return false;\n            }\n\n            //clear all selecteds\n            for (var i = 0; i < $embeds.length; i++) {\n                var $elem = $embeds[i];\n                $elem.classList.remove(self.opts.cssSelected);\n            }\n        },\n\n        \"removeEmbed\": function(e) {\n            var $embed,\n                self = this;\n\n            if (!MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE])) {\n                return;\n            }\n\n            $embed = self.document.querySelector(\".\" + self.opts.cssSelected);\n\n            if ($embed === null) {\n                return;\n            }\n\n            e.preventDefault();\n\n            var p = self.document.createElement(\"p\");\n            $embed.parentElement.insertBefore(p, $embed);\n            $embed.parentElement.removeChild($embed);\n        },\n\n        \"deleteEmbedOnBackspaceAndDel\": function(e) {\n            if (!MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.DELETE, MediumEditor.util.keyCode.BACKSPACE])) {\n                return;\n            }\n\n            var $current = MediumEditor.selection.getSelectionStart(this.base.options.ownerDocument),\n                self = this,\n                range = MediumEditor.selection.getSelectionRange(self.document),\n                p = MediumEditor.util.getClosestTag(MediumEditor.selection.getSelectedParentElement(range), \"p\"),\n                caretOffsets = MediumEditor.selection.getCaretOffsets($current);\n\n            if (caretOffsets.left > 0) {\n                return;\n            }\n\n            var $isEmbed = p.previousSibling;\n\n            if (typeof $isEmbed === \"undefined\" ||\n                typeof $isEmbed.classList === \"undefined\" ||\n                !$isEmbed.classList.contains(self.opts.cssEmbeds)) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            var newP = self.document.createElement(\"p\");\n            $isEmbed.parentElement.insertBefore(newP, $isEmbed);\n            $isEmbed.parentElement.removeChild($isEmbed);\n        },\n\n        \"embedSerialize\": function() {\n            var self = this,\n                data = self._originalSerializerPreEmbeds(),\n                doc = self.options.ownerDocument,\n                embedExtension = self.getExtensionByName(\"embedButton\");\n\n            for (var key in data) {\n                // skip loop if the property is from prototype\n                if (!data.hasOwnProperty(key)) continue;\n\n                var obj = data[key];\n\n                var $data = doc.createElement(\"div\");\n                $data.innerHTML = obj.value;\n\n                var $embeds = $data.querySelectorAll(\".\" + embedExtension.opts.cssEmbeds);\n                if ($embeds !== null) {\n                    $embeds.forEach(function ($embed) {\n                        $embed.removeAttribute(\"contenteditable\");\n                        $embed.classList.remove(embedExtension.opts.cssSelected);\n                        var $overlay = $embed.querySelector(\".\" + embedExtension.opts.cssEmbedOverlay);\n                        if ($overlay !== null) {\n                            $overlay.parentElement.removeChild($overlay);\n                        }\n                    });\n                }\n                data[key].value = $data.innerHTML;\n            }\n\n            return data;\n        },\n\n        \"getHtml\": function($elem) {\n            var $wrap = this.document.createElement(\"div\");\n            $wrap.appendChild($elem.cloneNode(true));\n            return $wrap.innerHTML;\n        },\n\n        \"injectScript\": function(url) {\n            var script = this.document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.async = true;\n            script.onLoad = function() {\n            };\n            script.src = this.document.location.protocol + url;\n            this.document.getElementsByTagName(\"head\")[0].appendChild(script);\n        }\n\n    };\n\n    window.EmbedButtonExtension = MediumEditor.extensions.button.extend(embedButton);\n}(window, document, MediumEditor));\n\n"],"sourceRoot":"/source/"}